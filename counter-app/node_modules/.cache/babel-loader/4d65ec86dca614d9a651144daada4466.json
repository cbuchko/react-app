{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\conno\\\\Desktop\\\\Everything\\\\Programming\\\\counter-app\\\\src\\\\components\\\\counter.jsx\";\nimport React, { Component } from 'react';\n\nclass Counter extends Component {\n  render() {\n    console.log('props', this.props);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.props.children, /*#__PURE__*/_jsxDEV(\"span\", {\n        className: this.getBadgeClasses(),\n        children: this.formatCount()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.props.onIncrement(this.props.counter),\n        className: \"btn btn-secondary btn-sm\",\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.props.onDelete(this.props.counter.id),\n        className: \"btn btn-danger btn-sm m-2\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this);\n  }\n\n  getBadgeClasses() {\n    let classes = \"badge m-2 badge-\";\n    classes += this.proper.counter.value === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n\n  formatCount() {\n    const {\n      value: count\n    } = this.props.counter;\n    return count === 0 ? 'Zero' : count;\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["C:/Users/conno/Desktop/Everything/Programming/counter-app/src/components/counter.jsx"],"names":["React","Component","Counter","render","console","log","props","children","getBadgeClasses","formatCount","onIncrement","counter","onDelete","id","classes","proper","value","count"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAE5BE,EAAAA,MAAM,GAAG;AAELC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,KAAKC,KAA1B;AACA,wBACI;AAAA,iBACK,KAAKA,KAAL,CAAWC,QADhB,eAEI;AAAM,QAAA,SAAS,EAAE,KAAKC,eAAL,EAAjB;AAAA,kBAA0C,KAAKC,WAAL;AAA1C;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AACI,QAAA,OAAO,EAAG,MAAM,KAAKH,KAAL,CAAWI,WAAX,CAAuB,KAAKJ,KAAL,CAAWK,OAAlC,CADpB;AAEI,QAAA,SAAS,EAAC,0BAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eASI;AACI,QAAA,OAAO,EAAG,MAAM,KAAKL,KAAL,CAAWM,QAAX,CAAoB,KAAKN,KAAL,CAAWK,OAAX,CAAmBE,EAAvC,CADpB;AAEI,QAAA,SAAS,EAAC,2BAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAmBH;;AAEDL,EAAAA,eAAe,GAAG;AACd,QAAIM,OAAO,GAAG,kBAAd;AACAA,IAAAA,OAAO,IAAK,KAAKC,MAAL,CAAYJ,OAAZ,CAAoBK,KAApB,KAA8B,CAA/B,GAAoC,SAApC,GAAgD,SAA3D;AACA,WAAOF,OAAP;AACH;;AAEDL,EAAAA,WAAW,GAAG;AACV,UAAM;AAAEO,MAAAA,KAAK,EAAEC;AAAT,QAAmB,KAAKX,KAAL,CAAWK,OAApC;AACA,WAAOM,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACH;;AAnC2B;;AAsChC,eAAef,OAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Counter extends Component {\r\n\r\n    render() { \r\n\r\n        console.log('props', this.props);\r\n        return (\r\n            <div>\r\n                {this.props.children}\r\n                <span className={this.getBadgeClasses()}>{this.formatCount()}</span>  \r\n                <button \r\n                    onClick={ () => this.props.onIncrement(this.props.counter) } \r\n                    className=\"btn btn-secondary btn-sm\"\r\n                >\r\n                    Increment\r\n                </button>\r\n                <button \r\n                    onClick={ () => this.props.onDelete(this.props.counter.id)} \r\n                    className=\"btn btn-danger btn-sm m-2\"\r\n                >\r\n                    Delete\r\n                </button>\r\n                {/* {this.renderTags()} */}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getBadgeClasses() {\r\n        let classes = \"badge m-2 badge-\";\r\n        classes += (this.proper.counter.value === 0) ? \"warning\" : \"primary\";\r\n        return classes;\r\n    }\r\n\r\n    formatCount() {\r\n        const { value: count } = this.props.counter;\r\n        return count === 0 ? 'Zero' : count;\r\n    }\r\n}\r\n \r\nexport default Counter;"]},"metadata":{},"sourceType":"module"}