{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\conno\\\\Desktop\\\\Everything\\\\Programming\\\\counter-app\\\\src\\\\components\\\\counter.jsx\";\nimport React, { Component } from 'react';\n\nclass Counter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      count: 0,\n      tags: ['tag1', 'tag2', 'tag3']\n    };\n  }\n\n  renderTags() {\n    if (this.state.tags.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"There are no tags!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 50\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: this.state.tags.map(tag => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: tag\n      }, tag, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 49\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 16\n    }, this);\n  }\n\n  handleIncrement() {\n    console.log('Increment Clicked');\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: this.getBadgeClasses(),\n        children: this.formatCount()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleIncrement,\n        className: \"btn btn-secondary btn-sm\",\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), this.renderTags()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  }\n\n  getBadgeClasses() {\n    let classes = \"badge m-2 badge-\";\n    classes += this.state.count === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n\n  formatCount() {\n    const {\n      count\n    } = this.state;\n    return count === 0 ? 'Zero' : count;\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["C:/Users/conno/Desktop/Everything/Programming/counter-app/src/components/counter.jsx"],"names":["React","Component","Counter","state","count","tags","renderTags","length","map","tag","handleIncrement","console","log","render","getBadgeClasses","formatCount","classes"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAE5BE,KAF4B,GAEpB;AACJC,MAAAA,KAAK,EAAE,CADH;AAEJC,MAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB;AAFF,KAFoB;AAAA;;AAQ5BC,EAAAA,UAAU,GAAG;AACT,QAAI,KAAKH,KAAL,CAAWE,IAAX,CAAgBE,MAAhB,KAA2B,CAA/B,EAAkC,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAElC,wBAAO;AAAA,gBAAM,KAAKJ,KAAL,CAAWE,IAAX,CAAgBG,GAAhB,CAAoBC,GAAG,iBAAI;AAAA,kBAAeA;AAAf,SAASA,GAAT;AAAA;AAAA;AAAA;AAAA,cAA3B;AAAN;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAEDC,EAAAA,eAAe,GAAE;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AAEH;;AACDC,EAAAA,MAAM,GAAG;AAEL,wBACI,QAAC,KAAD,CAAO,QAAP;AAAA,8BACI;AAAM,QAAA,SAAS,EAAE,KAAKC,eAAL,EAAjB;AAAA,kBAA0C,KAAKC,WAAL;AAA1C;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAE,KAAKL,eAAtB;AAAuC,QAAA,SAAS,EAAC,0BAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGK,KAAKJ,UAAL,EAHL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AAEDQ,EAAAA,eAAe,GAAG;AACd,QAAIE,OAAO,GAAG,kBAAd;AACAA,IAAAA,OAAO,IAAK,KAAKb,KAAL,CAAWC,KAAX,KAAqB,CAAtB,GAA2B,SAA3B,GAAuC,SAAlD;AACA,WAAOY,OAAP;AACH;;AAEDD,EAAAA,WAAW,GAAG;AACV,UAAM;AAAEX,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AACA,WAAOC,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACH;;AAtC2B;;AAyChC,eAAeF,OAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Counter extends Component {\r\n\r\n    state = {\r\n        count: 0,\r\n        tags: ['tag1', 'tag2', 'tag3']\r\n    };\r\n\r\n\r\n    renderTags() {\r\n        if (this.state.tags.length === 0) return <p>There are no tags!</p>;\r\n\r\n        return <ul>{ this.state.tags.map(tag => <li key={tag}>{tag}</li>) }</ul>  \r\n    }\r\n\r\n    handleIncrement(){\r\n        console.log('Increment Clicked');\r\n\r\n    }\r\n    render() { \r\n\r\n        return (\r\n            <React.Fragment>\r\n                <span className={this.getBadgeClasses()}>{this.formatCount()}</span>  \r\n                <button onClick={this.handleIncrement} className=\"btn btn-secondary btn-sm\">Increment</button>\r\n                {this.renderTags()}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    getBadgeClasses() {\r\n        let classes = \"badge m-2 badge-\";\r\n        classes += (this.state.count === 0) ? \"warning\" : \"primary\";\r\n        return classes;\r\n    }\r\n\r\n    formatCount() {\r\n        const { count } = this.state;\r\n        return count === 0 ? 'Zero' : count;\r\n    }\r\n}\r\n \r\nexport default Counter;"]},"metadata":{},"sourceType":"module"}